import pandas as pd
import numpy as np

dataset = pd.read_csv(r"C:\Users\Palak\Desktop\VT Project\Hate speech recog\labeled_data.csv")

dataset
dataset.isnull().sum()

dataset.info()

dataset.describe()

dataset["labels"] = dataset["class"].map({0: "Hate speech", 1: "Offensive language", 2: "No hate or offensive language"})

dataset

data = dataset[["tweet","labels"]]

data

import re
import nltk
import string

nltk.download('stopwords')

from nltk.corpus import stopwords
stopwords = set(stopwords.words("english"))

stemmer = nltk.SnowballStemmer("english")

def clean_data(text):
    text = str(text).lower()
    text = re.sub('https?://\S+|www\.S+', '', text)
    text = re.sub('\[.*?\]', '', text)
    text = re.sub('<.*?>+', '', text)
    text = re.sub('[%s]' %re.escape(string.punctuation), '', text)
    text = re.sub('\n', '', text)
    text = re.sub('\w*\d\w*', '', text)
    
    text = [word for word in text.split(' ') if word not in stopwords]
    text = " ".join(text)
    
    text = [stemmer.stem(word) for word in text.split(' ')]
    text = " ".join(text)
    return text

data["tweet"] = data["tweet"].apply(clean_data)

data

X = np.array(data["tweet"])
y = np.array(data["labels"])

from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split

cv = CountVectorizer()
X = cv.fit_transform(X)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)

from sklearn.tree import DecisionTreeClassifier

dt = DecisionTreeClassifier()
dt.fit(X_train, y_train)

y_pred = dt.predict(X_test)

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)
cm

import seaborn as sns
import matplotlib.pyplot as ply
%matplotlib inline

sns.heatmap(cm, annot = True, fmt="f", cmap = "YlGnBu")

from sklearn.metrics import accuracy_score
accuracy_score(y_test, y_pred)

sample = "I will kill you"
sample = clean_data(sample)

sample

data1 = cv.transform([sample]).toarray()
data1

print(dt.predict(data1))
